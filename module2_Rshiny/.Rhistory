#first two pca 90+%
p1<-lm(newbf$BODYFAT ~ pca$scores)
summary(p1)
########ridge: all variables retained......
x_var<-as.matrix(train.data[,-c(1,2)])
y_var<-train.data$BODYFAT
lambda_seq <- 10^seq(2, -2, by = -.1)
fit <- glmnet(x_var, y_var, alpha = 0, lambda  = lambda_seq)
summary(fit)
cv_fit <- cv.glmnet(x_var, y_var, alpha = 0, lambda = lambda_seq)
plot(cv_fit)
opt_lambda <- cv_fit$lambda.min
opt_lambda
fit <- cv_fit$glmnet.fit
summary(fit)
y_predicted <- predict(fit, s = opt_lambda, newx = as.matrix(test.data[,-c(1,2)]))
sse <- sum((y_predicted - test.data$BODYFAT)^2)
sst <- sum((test.data$BODYFAT - mean(test.data$BODYFAT))^2)
rsq <- 1 - sse / sst
rsq
#lasso
cv_output <- cv.glmnet(x_var, y_var,
alpha = 1, lambda = lambda_seq,
nfolds = 5)
best_lam <- cv_output$lambda.min
best_lam
lasso_best <- glmnet(x_var, y_var, alpha = 1, lambda = best_lam)
pred <- predict(lasso_best, s = best_lam, newx = as.matrix(test.data[,-c(1,2)]))
final <- cbind(test.data$BODYFAT, pred)
sse <- sum((pred - test.data$BODYFAT)^2)
rsq <- 1 - sse / sst
rsq
coef(lasso_best)
summary(myfit2)
library(rsconnect)
deployApp()
library(shiny)
runApp()
library(shiny)
runApp()
runApp()
bf_sample=bodyfat$BODYFAT
plot(density(bf_sample))
runApp()
bodyfat$BODYFAT
runApp()
runApp()
runApp()
runApp()
runApp()
plot(density(bf_sample))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(bodyfat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bodyfat
d <- bodyfat
p <- plot(d$AGE,d$DENSITY)
print(p)
d <- bodyfat
p <- plot(d$AGE, d$DENSITY)
runApp()
runApp()
runApp()
p <- ggplot(d$AGE,d$DENSITY)
print(p)
p <- ggplot(d$AGE,d$DENSITY)
print(p)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dataset <- reactive({
diamonds[sample(nrow(diamonds), input$sampleSize),]
})
dataset()
dataset()
runApp()
dataset()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# bf=(-277.78937)-2.54767*input$Abdomen+5.69643*input$Hip+13.18565*input$Wrist+0.18415*input$Abdomen*input$Wrist-0.32257*input$Hip*input$Wrist
output$plot <- renderPlot({
d <- bodyfat
p <- plot(d$AGE,d$DENSITY)
# p <- ggplot(dataset(), aes_string(x=input$x, y=input$y)) + geom_point()
# print(p)
# p <- ggplot(dataset(), aes_string(x=input$x, y=input$y)) + geom_point()
#
# if (input$color != 'None')
#   p <- p + aes_string(color=input$color)
#
# facets <- paste(input$facet_row, '~', input$facet_col)
# if (facets != '. ~ .')
#   p <- p + facet_grid(facets)
#
# if (input$jitter)
#   p <- p + geom_jitter()
# if (input$smooth)
#   p <- p + geom_smooth()
#
# print(p)
},height = 700)
print(p)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('total.R')
runApp('total.R')
runApp('total.R')
?points
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
bodyfat[1,]
runApp('total.R')
runApp('total.R')
#######pca ??
pca<-princomp(newbf[,-c(1,2)])
print(pca$loadings)
summary(pca)
#first two pca 90+%
p1<-lm(newbf$BODYFAT ~ pca$scores)
summary(p1)
########ridge: all variables retained......
x_var<-as.matrix(train.data[,-c(1,2)])
source('~/Desktop/stat628/k2.R')
source('~/Desktop/stat628/k2.R')
rm(list = ls())
bodyfat<-read.csv("~/Desktop/stat628/BodyFat.csv")
summary(bodyfat)
library(tidyverse)
library(caret)
library(glmnet)
###########data preprocessing#################
(h1<-hist(bodyfat$AGE))
hist(bodyfat$AGE,breaks=30,cex.lab=1.5,cex.main=1.5,
main="Histogram of Age",xlab="Age (yrs)")
plot(bodyfat$DENSITY,bodyfat$BODYFAT,pch=19,xlab="density",ylab = "bodyfat",main = "density vs. bodyfat")
dif<-bodyfat[2]-(495/bodyfat[3]-450)
diff<-as.numeric(unlist(dif))
Q1<-quantile(diff)[2];Q3<-quantile(diff)[4]
IQR<-Q3-Q1
out<-which(dif<Q1-1.5*IQR | dif>Q3+1.5*IQR) ####48,76,96,182,216
#pairs(bodyfat[,c(2:10)])
#z<-(diff-mean(diff))/sd(diff)
par(mfrow=c(3,5),mar=c(4,2,2,2))
#vs. bodyfat
for (i in 3:17) {
plot(bodyfat[,i],bodyfat[,2],col=ifelse(bodyfat[,1]%in%out,"white","darkblue"),pch=ifelse(bodyfat[,1]%in%out,19,16),xlab = colnames(bodyfat)[i],ylab="BODYFAT")
text(bodyfat[out,i],bodyfat[out,2],label=out,col="red")
text(bodyfat[-out,i],bodyfat[-out,2],label=bodyfat[-out,1],col="blue")#图太丑了...
}
#vs. density
for (i in 4:17) {
plot(bodyfat[,i],bodyfat[,3],col=ifelse(bodyfat[,1]%in%out,"white","darkblue"),pch=ifelse(bodyfat[,1]%in%out,19,16),xlab = colnames(bodyfat)[i],ylab="DENSITY")
text(bodyfat[out,i],bodyfat[out,3],label=out,col="red")
text(bodyfat[-out,i],bodyfat[-out,3],label=bodyfat[-out,1],col="blue")
}
#density outlier +96
#to check 48,76  我感觉有点问题这里 要重新想想 网上看到别人做的project里这样写：
#Fat percentages that do not satisfy the equation B = 495/D – 450 (ID # 48, 76, 96, 182). We don’t know which is in error (fat % or density) so ignore but watch out for high influence if in training sample or weird prediction if in test sample.
#bodyfat$IDNO[order(bodyfat$DENSITY)]
testorder<-c(227, 123, 162, 146,  48,  76,  90,  25,  46, 118)
othertest<-c(227, 123, 162, 146,  90,  25,  46, 118)
outtest<-c(48,76)
for (i in 3:17) {
plot(bodyfat[testorder,i],bodyfat[testorder,3],col=ifelse(bodyfat[testorder,1]%in%outtest,"white","darkblue"),pch=ifelse(bodyfat[testorder,1]%in%c(48,76),19,16),xlab = colnames(bodyfat)[i],ylab="BODYFAT",xlim = range(bodyfat[,i]))
text(bodyfat[c(48,76),i],bodyfat[c(48,76),3],label=c(48,76),col="red")
#text(bodyfat[othertest,i],bodyfat[othertest,2],label=bodyfat[othertest,1],col="blue")
}
#bodyfat$IDNO[order(bodyfat$BODYFAT)]
testorder<-c(29,  55,  50,   9, 149, 224,  48,  32, 204,   2,  54,  69, 199 )
othertest<-c(29,  55,  50,   9, 149, 224,  32, 204,   2,  54,  69, 199)
for (i in 3:17) {
plot(bodyfat[testorder,i],bodyfat[testorder,2],col=ifelse(bodyfat[testorder,1]%in%outtest,"white","darkblue"),pch=ifelse(bodyfat[testorder,1]%in%c(48,76),19,16),xlab = colnames(bodyfat)[i],ylab="BODYFAT",xlim = range(bodyfat[,i]))
text(bodyfat[48,i],bodyfat[48,2],label=48,col="red")
#text(bodyfat[othertest,i],bodyfat[othertest,2],label=bodyfat[othertest,1],col="blue")
}
testorder<-c(120, 131,  92, 142 , 83, 108,  76, 236, 214,  80,   7,  21, 147 )
othertest<-c(120, 131,  92, 142 , 83, 108, 236, 214,  80,   7,  21, 147 )
for (i in 3:17) {
plot(bodyfat[testorder,i],bodyfat[testorder,2],col=ifelse(bodyfat[testorder,1]%in%outtest,"white","darkblue"),pch=ifelse(bodyfat[testorder,1]%in%c(48,76),19,16),xlab = colnames(bodyfat)[i],ylab="BODYFAT",xlim = range(bodyfat[,i]))
text(bodyfat[76,i],bodyfat[76,2],label=76,col="red")
#text(bodyfat[othertest,i],bodyfat[othertest,2],label=bodyfat[othertest,1],col="blue")
}
#delete 216,182
#density outlier +96
#fix bodyfat of 48,76???
#keep 96
###one outlier in columns——39 delete
#one more outlier in HEIGHT——42 delete..
#outliers in ANKLE--86,31 delete...
bodyfat[c(48,76),2]<-495/bodyfat[c(48,76),3]-450 #if we fix 48,76
newbf<-bodyfat[-c(31,39,42,86,182,216),-3]#delete them
n<-dim(newbf)[1]
##########MLR model###########################
fitall<-lm(BODYFAT~.*.,data = newbf[,-1])
fitmain<-lm(BODYFAT~.,data = newbf[,-1])
fitnull<-lm(BODYFAT~1,data = newbf[,-1])
summary(fitall)
m1<-step(fitall,direction = "both",k=log(n))#ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST
m2<-step(fitall,direction = "backward",k=log(n))#ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST
m3<-step(fitnull,direction = "forward",k=log(n))
m4<-step(fitmain,direction = "both",k=log(n))#ABDOMEN + HIP + WRIST
#model1<-lm(BODYFAT~AGE+WEIGHT+HEIGHT+ADIPOSITY+NECK+ABDOMEN+WRIST,data=newbf[,-1])
myfit<-lm(formula = BODYFAT ~ ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST, data = newbf[,-1])
summary(m1)
anova(m1,m3)
anova(m1)
#pairs(~AGE + ADIPOSITY + CHEST + ABDOMEN + WRIST,data=newbf)
vif(myfit)
round(cor(newbf[,-1]),3)#multicollinearity!!!!!!
#mfp
#cross validation, try leave-one-out
#maybe group by different age?
#k-fold
library(DAAG)
#cv.lm(data = newbf, form.lm = formula(BODYFAT ~ AGE + ADIPOSITY + CHEST + ABDOMEN + WRIST + AGE:WRIST + ADIPOSITY:CHEST), m=8)
#cv.lm(data = newbf, form.lm = formula(BODYFAT ~ ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST), m=8)
#
training.samples <- newbf$BODYFAT %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- newbf[training.samples, ]
test.data <- newbf[-training.samples, ]
# Build the model
model <- lm(formula = BODYFAT ~ ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST, data = train.data)
# Make predictions and compute the R2, RMSE and MAE
predictions <- model %>% predict(test.data)
data.frame( R2 = R2(predictions, test.data$BODYFAT),
RMSE = RMSE(predictions, test.data$BODYFAT),
MAE = MAE(predictions, test.data$BODYFAT))
RMSE(predictions, test.data$BODYFAT)/mean(test.data$BODYFAT)
#ci
##########Diagnostics#########################
qqnorm(rstandard(myfit),pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
main="Normal Q-Q Plot of the Residuals")
abline(a=0,b=1,col="black",lwd=3)
#see another file diag1
########indo 41 is influential & outlier
###also some other influential points
####if we delete 41 and refit and redo the analysis above
newbf<-bodyfat[-c(31,39,41,42,86,182,216),-3]
fitall<-lm(BODYFAT~.*.,data = newbf[,-1])
fitmain<-lm(BODYFAT~.,data = newbf[,-1])
fitnull<-lm(BODYFAT~1,data = newbf[,-1])
summary(fitall)
m1<-step(fitall,direction = "both",k=log(n))#ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST
m2<-step(fitall,direction = "backward",k=log(n))#ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST
m3<-step(fitnull,direction = "forward",k=log(n))
m4<-step(fitmain,direction = "both",k=log(n))#ABDOMEN + HEIGHT + WRIST
#model1<-lm(BODYFAT~AGE+WEIGHT+HEIGHT+ADIPOSITY+NECK+ABDOMEN+WRIST,data=newbf[,-1])
myfit2<-lm(formula = BODYFAT ~ ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST, data = newbf[,-1])
summary(myfit)
summary(myfit2)
summary(m4)
anova(m1,m3)
anova(m4)
anova(m1)
###############other models to fix multicollinearity
#######pca ??
pca<-princomp(newbf[,-c(1,2)])
print(pca$loadings)
summary(pca)
#first two pca 90+%
p1<-lm(newbf$BODYFAT ~ pca$scores)
summary(p1)
########ridge: all variables retained......
x_var<-as.matrix(train.data[,-c(1,2)])
y_var<-train.data$BODYFAT
lambda_seq <- 10^seq(2, -2, by = -.1)
fit <- glmnet(x_var, y_var, alpha = 0, lambda  = lambda_seq)
summary(fit)
cv_fit <- cv.glmnet(x_var, y_var, alpha = 0, lambda = lambda_seq)
plot(cv_fit)
opt_lambda <- cv_fit$lambda.min
opt_lambda
fit <- cv_fit$glmnet.fit
summary(fit)
y_predicted <- predict(fit, s = opt_lambda, newx = as.matrix(test.data[,-c(1,2)]))
sse <- sum((y_predicted - test.data$BODYFAT)^2)
sst <- sum((test.data$BODYFAT - mean(test.data$BODYFAT))^2)
rsq <- 1 - sse / sst
rsq
#cv.lm(data = newbf, form.lm = formula(BODYFAT ~ AGE + ADIPOSITY + CHEST + ABDOMEN + WRIST + AGE:WRIST + ADIPOSITY:CHEST), m=8)
#cv.lm(data = newbf, form.lm = formula(BODYFAT ~ ABDOMEN + HIP + WRIST + ABDOMEN:WRIST + HIP:WRIST), m=8)
#
training.samples <- newbf$BODYFAT %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- newbf[training.samples, ]
runApp('total.R')
runApp('total.R')
runApp('total.R')
library(shinyWidgets)
install.packages("shinyWidgets")
library(shinyWidgets)
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
library(shinyWidgets)
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
?renderPlot
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
runApp('total.R')
deployApp()
rsconnect::showLogs()
deployApp()
library(rsconnect)
rsconnect::setAccountInfo(name='jonquil-129', token='BCAB5134ABE153834C7579238FDEBFCF', secret='/icEV6606CWDUhCKAlM95/PTCgGvfnwXouIChyrX')
deployApp()
deployApp()
runApp('total.R')
getwd()
runApp('total.R')
runApp('total.R')
deployApp()
deployApp()
deployApp()
knitr::opts_chunk$set(echo = TRUE)
noise <- rnorm(5000)
autocorrelation1 <- list();
autocorrelation1 <- append(autocorrelation1,0)
for (i in 2:4000){
autocorrelation1 <- append(autocorrelation1,autocorrelation1[[i-1]]*.5 + noise[i]);
}
autocorrelation1 <- unlist(autocorrelation1)
plot(autocorrelation1, type="o")
acf(autocorrelation1)
autocorrelation2 <- list();
autocorrelation2 <- append(autocorrelation2,0)
for (i in 2:4000){
autocorrelation2 <- append(autocorrelation2,autocorrelation2[[i-1]]*(-0.5) + noise[i]);
}
autocorrelation2 <- unlist(autocorrelation2)
plot(autocorrelation2, type="o")
acf(autocorrelation2)
autocorrelation3 <- list();
autocorrelation3 <- append(autocorrelation3,0)
for (i in 2:4000){
autocorrelation3 <- append(autocorrelation3,autocorrelation3[[i-1]]*(0.95) + noise[i]);
}
autocorrelation3 <- unlist(autocorrelation3)
plot(autocorrelation3, type="o")
acf(autocorrelation3)
autocorrelation4 <- list();
autocorrelation4 <- append(autocorrelation4,0)
for (i in 2:4000){
autocorrelation4 <- append(autocorrelation4,autocorrelation4[[i-1]]*(0.25) + noise[i]);
}
autocorrelation4 <- unlist(autocorrelation4)
plot(autocorrelation4, type="o")
acf(autocorrelation4)
runApp()
runApp()
f <- function(x) { (-277.78937)-2.54767*x[1]+5.69643*x[2]+13.18565*x[3]+0.18415*x[1]*x[3]-0.32257*x[2]*x[3] }
runApp()
deployApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bodyfat[96,]
bodyfat[42,]
bodyfat[bodyfat[,2]>30,]
runApp()
bodyfat[182,]
bodyfat[96,]
runApp()
2
rm(list = ls())
bodyfat<-read.csv("BodyFat.csv")
summary(bodyfat)
library(tidyverse)
library(caret)
library(glmnet)
library(MVA)
library(car)
library(tidyverse)
library(caret)
library(glmnet)
library(MVA)
library(car)
plot(bodyfat$DENSITY,bodyfat$BODYFAT,pch=19,xlab="density",ylab = "bodyfat",main = "density vs. bodyfat")
dif<-bodyfat[2]-(495/bodyfat[3]-450)
diff<-as.numeric(unlist(dif))
Q1<-quantile(diff)[2];Q3<-quantile(diff)[4]
IQR<-Q3-Q1
out<-which(dif<Q1-1.5*IQR | dif>Q3+1.5*IQR) ####48,76,96,182,216
par(mfrow=c(3,5),mar=c(4,2,2,2))
#vs. bodyfat
for (i in 3:17) {
bvbox(cbind(bodyfat[,i],bodyfat[,2]),col="white",pch=ifelse(bodyfat[,1]%in%out,19,16),xlab = colnames(bodyfat)[i],ylab="BODYFAT")
text(bodyfat[out,i],bodyfat[out,2],label=out,col="red")
text(bodyfat[-out,i],bodyfat[-out,2],label=bodyfat[-out,1],col="darkblue")
}
#vs. density
for (i in 4:17) {
bvbox(cbind(bodyfat[,i],bodyfat[,3]),col="white",pch=ifelse(bodyfat[,1]%in%out,19,16),xlab = colnames(bodyfat)[i],ylab="DENSITY")
text(bodyfat[out,i],bodyfat[out,3],label=out,col="red")
text(bodyfat[-out,i],bodyfat[-out,3],label=bodyfat[-out,1],col="darkblue")
}
#density outlier +96
#delete 216,182
#keep bodyfat of 48,76
